#include <metal_stdlib>
#include <simd/simd.h>

using namespace metal;

struct type_Mvp
{
    float4x4 mvp;
};

struct type_Axis
{
    uint x_axis;
};

struct type_Offset
{
    float offset;
};

struct main0_out
{
    float4 out_var_TEXCOORD0 [[user(locn0)]];
    float2 out_var_TEXCOORD1 [[user(locn1)]];
    float out_var_TEXCOORD2 [[user(locn2)]];
    float4 gl_Position [[position]];
};

struct main0_in
{
    float2 in_var_TEXCOORD0 [[attribute(0)]];
    float4 in_var_TEXCOORD1 [[attribute(1)]];
};

vertex main0_out main0(main0_in in [[stage_in]], constant type_Mvp& Mvp [[buffer(0)]], constant type_Axis& Axis [[buffer(1)]], constant type_Offset& Offset [[buffer(2)]], uint gl_InstanceIndex [[instance_id]])
{
    main0_out out = {};
    float2 _42 = in.in_var_TEXCOORD0;
    float _47 = float(gl_InstanceIndex) * Offset.offset;
    float2 _60;
    if (Axis.x_axis == 1u)
    {
        float2 _56 = _42;
        _56.x = _42.x + _47;
        _60 = _56;
    }
    else
    {
        float2 _59 = _42;
        _59.y = _42.y + _47;
        _60 = _59;
    }
    float4 _66 = Mvp.mvp * float4(_60, 0.0, 1.0);
    out.gl_Position = _66;
    out.out_var_TEXCOORD0 = in.in_var_TEXCOORD1;
    out.out_var_TEXCOORD1 = _66.xy;
    out.out_var_TEXCOORD2 = 0.0;
    return out;
}

