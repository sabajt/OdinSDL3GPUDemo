#include <metal_stdlib>
#include <simd/simd.h>

using namespace metal;

struct type_ResUBO
{
    float4 res_cam;
};

struct main0_out
{
    float4 out_var_SV_Target0 [[color(0)]];
};

struct main0_in
{
    float4 in_var_TEXCOORD0 [[user(locn0)]];
    float2 in_var_TEXCOORD1 [[user(locn1)]];
    float in_var_TEXCOORD2 [[user(locn2)]];
};

fragment main0_out main0(main0_in in [[stage_in]], constant type_ResUBO& ResUBO [[buffer(0)]])
{
    main0_out out = {};
    float4 _27 = in.in_var_TEXCOORD0;
    float _37 = float(in.in_var_TEXCOORD2 > 0.0);
    _27.w = (_37 * (float((_37 * fmod((((in.in_var_TEXCOORD1 * float2(0.5)) + float2(0.5)) * ResUBO.res_cam.xy).x / in.in_var_TEXCOORD2, in.in_var_TEXCOORD2)) >= (in.in_var_TEXCOORD2 * 0.5)) * _27.w)) + (float(in.in_var_TEXCOORD2 <= 0.0) * _27.w);
    out.out_var_SV_Target0 = _27;
    return out;
}

